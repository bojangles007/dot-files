#+TITLE: My Gnus Setup
#+AUTHOR: Stig Brautaset
#+PROPERTY: header-args:emacs-lisp :results silent

This is my Gnus config. I like to use Org babel because I like to prattle on
to myself with stuff that shouldn't necessarily go in the end product.

First write a tiny bootloader to =~/.gnus.el=, which simply loads this file.
The process generates a =Gnus.el= file. This section does not end up in the
=Gnus.el=, presumably because of the explicit =:tangle ~/.gnus.el= directive.

#+BEGIN_SRC emacs-lisp :tangle ~/.gnus.el
  (require 'ob-tangle)
  (org-babel-load-file "~/Dotfiles/Gnus.org")
#+END_SRC

Write a header to the Gnus.el so it won't be confused with the real config.
Sadness and woe will betide you if you edit it and start Gnus: your changes
will be summarily overwritten.

#+BEGIN_SRC emacs-lisp
  ;;; gnus.el --- my Gnus configuration

  ;; Warning: The primary source of this config is in the Gnus.org file next to
  ;; this one. Any changes made to Gnus.el will be blown away when Gnus starts.
#+END_SRC

Load required libraries. nnmail is used later to move messages to the correct
folder when they are expired. nnir is used to search messages.

#+BEGIN_SRC emacs-lisp
(require 'nnmail)
(require 'nnir)
#+END_SRC

Set different parameters based on the group/folder I currently have open.

#+BEGIN_SRC emacs-lisp
  (setq gnus-parameters
        '((".*"
           (gcc-self . "nnimap+Personal:Sent Messages")
           (expiry-target . "nnimap+Personal:Deleted Messages")
           (expiry-wait . never)
           (posting-style
            (name "Stig Brautaset")
            (address "stig@brautaset.org")))

          ("^nnimap\\+LaterPay"
           (gcc-self . "nnimap+LaterPay:[Gmail].Sent Mail")
           (expiry-target . "nnimap+LaterPay:[Gmail].Bin")
           (posting-style
            (address "sbrautaset@laterpay.net")
            (organisation "LaterPay GmbH")))

          ("^nnrss:"
           (mm-discouraged-alternatives nil))

          ("INBOX"
           (expiry-wait . immediate))))
#+END_SRC

Always keep the INBOX visible, even if it has no messages. This is handy so
that I can always select it and have the above posting-styles applied when
writing new mail.

#+BEGIN_SRC emacs-lisp
  (setq gnus-permanently-visible-groups "INBOX")
#+END_SRC

For reading bona fide news I use [[file:Leafnode.org][Leafnode]] running on my local machine so I can
read news offline. This is more to avoid hangs when starting Gnus when I am
offline than anything else. (I use a laptop and often have no internet where I
am.)

#+BEGIN_SRC emacs-lisp
  (setq gnus-select-method '(nntp "localhost"))
#+END_SRC

I also have two mail accounts. I don't subscribe to work mail folders on my
personal account, but for convenience this config is the same. See [[file:OfflineIMAP.org][OfflineIMAP]]
for more details on this setup.

#+BEGIN_SRC emacs-lisp
  (setq gnus-secondary-select-methods
        '((nnimap "LaterPay"
                  (nnimap-stream shell)
                  (nnimap-shell-program "/usr/local/opt/dovecot/libexec/dovecot/imap -o mail_location=maildir:$HOME/Mail/LaterPay")
                  (nnir-search-engine imap))
          (nnimap "Personal"
                  (nnimap-stream shell)
                  (nnimap-shell-program "/usr/local/opt/dovecot/libexec/dovecot/imap -o mail_location=maildir:$HOME/Mail/Personal")
                  (nnir-search-engine imap))))
#+END_SRC

A list of groups I am subscribed to. I am honestly not certain what this does.

#+BEGIN_SRC emacs-lisp
  (setq message-subscribed-addresses
        '("centos-announce@centos.org"))
#+END_SRC

Ignore all groups matching this regular expression.

#+BEGIN_SRC emacs-lisp
(setq gnus-ignored-newsgroups "^to\\.\\|^[0-9. ]+\\( \\|$\\)\\|^[\"]\"[#'()]")
#+END_SRC

I only use Gnus, so I don't care about =.newsrc=, actually.

#+BEGIN_SRC emacs-lisp
  (setq gnus-read-newsrc-file nil)
  (setq gnus-save-newsrc-file nil)
#+END_SRC

When viewing articles, remove Carriage Returns.

#+BEGIN_SRC emacs-lisp
  (setq gnus-treat-strip-cr t)
#+END_SRC
