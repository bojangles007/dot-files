#+TITLE: My Gnus Setup
#+AUTHOR: Stig Brautaset
#+PROPERTY: header-args:emacs-lisp :results silent

This is my Gnus config. I like to use Org babel because I like to prattle on
to myself with stuff that shouldn't necessarily go in the end product.

First write a tiny bootloader to =~/.gnus.el=, which simply loads this file.
The process generates a =Gnus.el= file. This section does not end up in the
=Gnus.el=, presumably because of the explicit =:tangle ~/.gnus.el= directive.

#+BEGIN_SRC emacs-lisp :tangle ~/.gnus.el
  (require 'ob-tangle)
  (org-babel-load-file "~/Dotfiles/Gnus.org")
#+END_SRC

Write a header to the Gnus.el so it won't be confused with the reas config.
Sadness and woe will betide you if you edit it and start Gnus: your changes
will be summarily overwritten.

#+BEGIN_SRC emacs-lisp
  ;;; gnus.el --- my Gnus configuration

  ;; Warning: The primary source of this config is in the Gnus.org file next to
  ;; this one. Any changes made to Gnus.el will be blown away when Gnus starts.
#+END_SRC

Load required libraries. nnmail is used later to move messages to the correct
folder when they are expired. nnir is used to search messages.

#+BEGIN_SRC emacs-lisp
(require 'nnmail)
(require 'nnir)
#+END_SRC

Set different parameters based on the group/folder I currently have open.

#+BEGIN_SRC emacs-lisp
  (setq gnus-parameters
        '((".*"
           (gcc-self . "nnimap+icloud:Sent Messages")
           (expiry-target . "nnimap+icloud:Deleted Messages")
           (expiry-wait . never)
           (posting-style
            (name "Stig Brautaset")
            (address "stig@brautaset.org")))

          ("^nnimap\\+gmail"
           (gcc-self . "nnimap+gmail:[Gmail]/Sent Mail")
           (expiry-target . "nnimap+gmail:[Gmail]/Bin")
           (posting-style
            (address "sbrautaset@gmail.com")))

          ("^nnimap\\+laterpay"
           (gcc-self . "nnimap+laterpay:[Gmail]/Sent Mail")
           (expiry-target . "nnimap+laterpay:[Gmail]/Bin")
           (posting-style 
            (address "sbrautaset@laterpay.net")
            (organisation "LaterPay GmbH")))

          ("INBOX"
           (expiry-wait . immediate))))
#+END_SRC

Always keep the inbox visible.

#+BEGIN_SRC emacs-lisp
(setq gnus-permanently-visible-groups "INBOX")
#+END_SRC

Do not expire messages immediately when exiting the group. I press =C-c C-x=
in the \*Group\* buffer if I want messages to expire.

#+BEGIN_SRC emacs-lisp
(remove-hook 'gnus-summary-prepare-exit-hook
             'gnus-summary-expire-articles)
#+END_SRC

For reading /bona fide news/ I use gmane as my primary server.

#+BEGIN_SRC emacs-lisp
  (setq gnus-select-method '(nntp "news.gmane.org"))
#+END_SRC

I also have some other mail accounts. I don't subscribe to all mailboxes
everywhere, but for convenience the config is the same.

Also set different expiry targets based on the account the mail is in.

#+BEGIN_SRC emacs-lisp
  (setq gnus-secondary-select-methods
        '((nnimap "gmail"
                   (nnimap-address "imap.gmail.com")
                   (nnimap-server-port "imaps")
                   (nnimap-stream ssl)
                   (nnir-search-engine imap)

                   (nnmail-expiry-target "nnimap+gmail:[Gmail]/Bin"))

          (nnimap "laterpay"
                  (nnimap-address "imap.gmail.com")
                  (nnimap-server-port "imaps")
                  (nnimap-stream ssl)
                  (nnir-search-engine imap)

                  (nnmail-expiry-target "nnimap+laterpay:[Gmail]/Bin"))

          (nnimap "icloud"
                  (nnimap-address "imap.mail.me.com")
                  (nnimap-server-port "imaps")
                  (nnimap-stream ssl)
                  (nnir-search-engine imap)

                  (nnmail-expiry-target "nnimap+icloud:Deleted Messages"))))
#+END_SRC

A list of groups I am subscribed to. I am honestly not certain what this does.

#+BEGIN_SRC emacs-lisp
(setq message-subscribed-addresses
      '("centos-announce@centos.org"))
#+END_SRC

Ignore all groups matching this regular expression.

#+BEGIN_SRC emacs-lisp
(setq gnus-ignored-newsgroups "^to\\.\\|^[0-9. ]+\\( \\|$\\)\\|^[\"]\"[#'()]")
#+END_SRC

I only use Gnus, so I don't care about =.newsrc=, actually.

#+BEGIN_SRC emacs-lisp
(setq gnus-save-newsrc-file nil)
#+END_SRC
