#+TITLE: Leafnode Setup
#+AUTHOR: Stig Brautaset
* Introduction

  I read email and news with Gnus. I often use a laptop, and often in places I
  don't have internet access. Gnus doesn't like not being able to connect to
  the nntp server when it starts, so as a work-around I run the [[http://leafnode.sourceforge.net][Leafnode]] NNTP
  server locally. As a nice side effect, Gnus starts a lot faster.

* Installation

  This is dirt simple; I install it with homebrew:

  #+BEGIN_SRC sh
    brew install leafnode
  #+END_SRC

* Configuration

  Configuring Leafnode is quite simple really. The action all takes place in
  the =/usr/local/etc/leafnode/config= file. You have to create it, but
  there's a well-commented example at =/usr/local/etc/leafnode/config.example=
  that we can use as a reference. I'll omit comments from my version.

  Leafnode requires a fully qualified hostname, and my machines just has
  $hostname.local---which is not considered good enough. I could hardcode it,
  but I use the same config on two different machines and I want to keep these
  separate. So, first, we need to figure out our machine hostname. This is
  luckly simple:

  #+NAME: hostname
  #+BEGIN_SRC sh
  hostname -s | tr A-Z a-z
  #+END_SRC

  Then, we call that snippet from our config snippet, using the "noweb"
  syntax.

  #+BEGIN_SRC conf :tangle /usr/local/etc/leafnode/config :noweb yes
    expire = 20
    server = news.gmane.org
    initialfetch = 100
    hostname = <<hostname()>>.superloopy.io
  #+END_SRC

* Scheduling the daemons to run

  Leafnode consists of three important daemons (programs):

  - fetchnews :: posts to and fetches articles from upstream.
  - leafnode :: the nntp server that Gnus interacts with.
  - texpire :: a periodic job that cleans up old / obsolete news.

  We need to configure these to run periodically. Since we're on OS X we'll
  use launchd. I've cribbed heavily from [[https://trac.macports.org/browser/trunk/dports/news/leafnode/files][the Leafnode macports package]] for
  these config files.

** Fetchnews

   Let's run this every 30 minutes to push outgoing posts to and fetch new
   articles from upstream.

   #+BEGIN_SRC nxml :tangle ~/Library/LaunchAgents/org.brautaset.fetchnews.plist
     <?xml version="1.0" encoding="UTF-8"?>
     <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
     <plist version="1.0">
       <dict>
         <key>KeepAlive</key>
         <false/>
         <key>Label</key>
         <string>org.brautaset.fetchnews</string>
         <key>Program</key>
         <string>/usr/local/sbin/fetchnews</string>
         <key>StartInterval</key>
         <integer>1800</integer>
         <key>WorkingDirectory</key>
         <string>/usr/local/var/spool/news</string>
       </dict>
     </plist>
   #+END_SRC

** Leafnode

   Next we need to make sure that Leafnode runs when anyone (Gnus) attempts to
   connect to the news server. It is best to launch it on demand, so it does
   not require resources when we are not reading news.

   #+BEGIN_SRC nxml :tangle ~/Library/LaunchAgents/org.brautaset.leafnode.plist
     <?xml version="1.0" encoding="UTF-8"?>
     <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
     <plist version="1.0">
       <dict>
         <key>OnDemand</key>
         <true/>
         <key>Label</key>
         <string>org.brautaset.leafnode</string>
         <key>WorkingDirectory</key>
         <string>/usr/local/var/spool/news</string>
         <key>Program</key>
         <string>/usr/local/sbin/leafnode</string>
         <key>Sockets</key>
         <dict>
           <key>Listeners</key>
           <dict>
             <key>SockServiceName</key>
             <string>nntp</string>
           </dict>
         </dict>
         <key>inetdCompatibility</key>
         <dict>
           <key>Wait</key>
           <false/>
         </dict>
       </dict>
     </plist>
   #+END_SRC

** Texpire

   We'll run it about every 7 hours, which means that on successive days it
   should run at different times of day.

   #+BEGIN_SRC nxml :tangle ~/Library/LaunchAgents/org.brautaset.texpire.plist
     <?xml version="1.0" encoding="UTF-8"?>
     <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
     <plist version="1.0">
       <dict>
         <key>KeepAlive</key>
         <false/>
         <key>Label</key>
         <string>org.brautaset.texpire</string>
         <key>Program</key>
         <string>/usr/local/sbin/texpire</string>
         <key>StartInterval</key>
         <integer>25000</integer>
         <key>WorkingDirectory</key>
         <string>/usr/local/var/spool/news</string>
       </dict>
     </plist>
   #+END_SRC

** Start the services

   Because we put the launchd config files in =~/Library/LaunchAgents= they
   should be automatically loaded at login, so you shouldn't have to think
   about it. However, you probably don't want to logout and back in again just
   to load them. Luckily you can run this command to load them manually now:

   #+BEGIN_SRC sh :results output silent
     launchctl load ~/Library/LaunchAgents/org.brautaset.{fetchnews,texpire,leafnode}.plist
   #+END_SRC
