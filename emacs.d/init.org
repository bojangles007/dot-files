#+TITLE: Package.el & use-package Setup
#+AUTHOR: Stig Brautaset
#+OPTIONS: f:t
#+PROPERTY: header-args:emacs-lisp :tangle yes
#+PROPERTY: header-args:sh         :tangle yes
#+PROPERTY: header-args            :results silent

* Load =package.el=

  I install more than 60 packages using =package.el=. First we need to load
  that package.

  #+BEGIN_SRC emacs-lisp
  (require 'package)
  #+END_SRC

* Add Package Archives & priorities

  Before we can install packages, we need to add the URLs of the package
  archives we want to use. I like to use Melpa-stable where possible. I don't
  use Marmelade as it seems to overlap with Melpa.

  #+BEGIN_SRC emacs-lisp
    (add-to-list 'package-archives '("melpa-stable" . "http://stable.melpa.org/packages/"))
    (add-to-list 'package-archives '("melpa" . "http://melpa.org/packages/"))
  #+END_SRC

  I also add the `org' archive as I want to install the `org-plus-contrib'
  package, which includes `org-mime'.

  #+BEGIN_SRC emacs-lisp
    (add-to-list 'package-archives '("org" . "http://orgmode.org/elpa/"))
  #+END_SRC

  Since Emacs 25.1 we can now set a [[http://endlessparentheses.com/new-in-emacs-25-1-archive-priorities-and-downgrading-packages.html][priority for package archives]]. I prefer to
  run stable packages, so make single-package repos and melpa-stable the
  priority, with bleeding edge melpa last.

  #+BEGIN_SRC emacs-lisp
    (setq package-archive-priorities
          '(("org" . 30)
            ("melpa-stable" . 20)
            ("gnu" . 10)
            ("melpa" . 0)))
  #+END_SRC

* Initialize packages

  Initialize packages early, so we load the latest org from ELPA (rather than
  the one that is bundled with Emacs) later in this file.

  #+BEGIN_SRC emacs-lisp
    (package-initialize)
  #+END_SRC

  Normally packages are initialised after reading the init file, but we
  already did it manually so there's no reason to do so. This prevents
  packages being activated again.

  #+BEGIN_SRC emacs-lisp
    (setq package-enable-at-startup nil)
  #+END_SRC

* Install =use-package=

  Most of my config use the excellent [[https://github.com/jwiegley/use-package][use-package]] for installing & configuring
  packages. Because it is /itself/ installed via Melpa, there's a minor
  bootstrapping problem: we have to make sure it is installed before we can
  use it to install the rest of the packages.

  #+BEGIN_SRC emacs-lisp
    (unless (package-installed-p 'use-package)
      (message "%s" "Refreshing package database...")
      (package-refresh-contents)
      (package-install 'use-package))
  #+END_SRC

  Configure =use-package= to pre-compile the configuration for faster loading.

  #+BEGIN_SRC emacs-lisp
    (eval-when-compile
      (require 'use-package))
    (require 'bind-key)
  #+END_SRC

* Load the remaining config

  Now find all capitalised =.org= files in this directory, tangle them (i.e.
  extract all the emacs-lisp snippets into corresponding =.el= files) and load
  the result.

  #+BEGIN_SRC emacs-lisp
    (let ((dotfiles-dir (file-name-directory (or (buffer-file-name)
                                                 load-file-name))))
      (mapc #'org-babel-load-file
            (directory-files dotfiles-dir t "[A-Z]\\w+\\.org$")))
  #+END_SRC
